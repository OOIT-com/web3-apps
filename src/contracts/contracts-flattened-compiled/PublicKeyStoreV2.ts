
export const publicKeyStoreV2Abi         = [{"inputs":[],"name":"getEncSecretKey","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"getPublicKey","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_publicKey","type":"string"},{"internalType":"string","name":"_encSecretKey","type":"string"}],"name":"setKeys","outputs":[],"stateMutability":"nonpayable","type":"function"}] as const;
export const publicKeyStoreV2Bytecode    = "608060405234801561001057600080fd5b5061050f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806378732aa814610046578063857cdbb814610064578063bba610b014610077575b600080fd5b61004e61008c565b60405161005b9190610408565b60405180910390f35b61004e610072366004610379565b61012d565b61008a6100853660046103a7565b6101d9565b005b3360009081526001602052604090208054606091906100aa90610488565b80601f01602080910402602001604051908101604052809291908181526020018280546100d690610488565b80156101235780601f106100f857610100808354040283529160200191610123565b820191906000526020600020905b81548152906001019060200180831161010657829003601f168201915b5050505050905090565b6001600160a01b038116600090815260208190526040902080546060919061015490610488565b80601f016020809104026020016040519081016040528092919081815260200182805461018090610488565b80156101cd5780601f106101a2576101008083540402835291602001916101cd565b820191906000526020600020905b8154815290600101906020018083116101b057829003601f168201915b50505050509050919050565b33600090815260016020526040902080546101f390610488565b15905061021b5760405162461bcd60e51b81526004016102129061045b565b60405180910390fd5b3360009081526020818152604090912083516102399285019061025f565b50336000908152600160209081526040909120825161025a9284019061025f565b505050565b82805461026b90610488565b90600052602060002090601f01602090048101928261028d57600085556102d3565b82601f106102a657805160ff19168380011785556102d3565b828001600101855582156102d3579182015b828111156102d35782518255916020019190600101906102b8565b506102df9291506102e3565b5090565b5b808211156102df57600081556001016102e4565b600082601f830112610308578081fd5b813567ffffffffffffffff80821115610323576103236104c3565b604051601f8301601f191681016020018281118282101715610347576103476104c3565b60405282815284830160200186101561035e578384fd5b82602086016020830137918201602001929092529392505050565b60006020828403121561038a578081fd5b81356001600160a01b03811681146103a0578182fd5b9392505050565b600080604083850312156103b9578081fd5b823567ffffffffffffffff808211156103d0578283fd5b6103dc868387016102f8565b935060208501359150808211156103f1578283fd5b506103fe858286016102f8565b9150509250929050565b6000602080835283518082850152825b8181101561043457858101830151858201604001528201610418565b818111156104455783604083870101525b50601f01601f1916929092016040019392505050565b6020808252601390820152724b65797320616c72656164792065786973742160681b604082015260600190565b60028104600182168061049c57607f821691505b602082108114156104bd57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212204c0939fff24c49a29fc058b77e9cafcdd7a0fb06d0eb1ad98b527a84887a7df764736f6c63430008000033";
export const publicKeyStoreV2_SourceCode = "// File: contracts/public-key-store/PublicKeyStoreV2.sol\n\n// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\n/**\n This rendition of a public key isn't revealing the public encryption key associated with the address.\n Instead, it presents an individual distinct public key.\n Alongside this public key, the confidential key is preserved in the contract and encrypted using the public encryption key attached to the address.\n*/\n\ncontract PublicKeyStoreV2\n{\n    mapping(address => string) private publicKeyMap;\n    mapping(address => string) private encSecretKeyMap;\n\n    function setKeys(string memory _publicKey, string memory _encSecretKey) public\n    {\n        require(bytes(encSecretKeyMap[msg.sender]).length == 0, 'Keys already exist!');\n        publicKeyMap[msg.sender] = _publicKey;\n        encSecretKeyMap[msg.sender] = _encSecretKey;\n    }\n\n    function getEncSecretKey() public view returns (string memory)\n    {\n        return encSecretKeyMap[msg.sender];\n    }\n\n    function getPublicKey(address _address) public view returns (string memory)\n    {\n        return publicKeyMap[_address];\n    }\n}\n";
export const publicKeyStoreV2_Version    = "solc-emscripten-wasm32-v0.8.0+commit.c7dfd78e.js";